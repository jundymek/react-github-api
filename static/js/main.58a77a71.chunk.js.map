{"version":3,"sources":["img/code.jpg","img/code1.jpg","img/code2.jpg","img/computer.jpg","components/SearchBar.js","components/MainHeader.js","components/RepositoryBox.js","components/RepositoryList.js","components/RepositoryLanguagesCounter.js","components/RepositoryUserBox.js","components/RepositoryListManager.js","components/Footer.js","App.js","serviceWorker.js","index.js","img/github_icon_small.png"],"names":["module","exports","images","img","img1","img2","img3","StyledInput","styled","input","StyledForm","form","colors","StyledButton","button","Math","floor","random","length","SearchBar","props","useState","inputValue","setInputValue","getWantedData","data","dataObjects","map","item","url","html_url","title","name","creation_date","created_at","slice","modification_date","updated_at","description","language","key","id","github_io","homepage","owner","console","log","handleTechnologiesToSortChange","technologies","push","Set","getTechnologiesToSort","handleSearchBarDataChange","handleRepositoryDataChange","onSubmit","e","preventDefault","fetch","then","resp","json","message","includes","repos","catch","error","handleFetchData","type","placeholder","onChange","target","value","StyledHeader","header","isData","StyledH1","h1","MainHeader","ContentLeft","div","Photo","StyledSection","section","isMirrored","css","LeftSection","RightSection","Title","h2","SubTitle","h3","Description","p","Created","LinksWrapper","GithubLink","a","LinksInRepositoryBox","href","RepositoryBox","createDate","updateDate","role","aria-label","RepositoryList","index","RepositoryLanguagesCounter","filter","BoxWrapper","UserImage","StyledLabel","label","UserBoxUl","ul","StyledH2","UserBoxLi","li","StyledSelect","select","Icon","RepositoryUserBox","handleChangeSelectedValue","repositoryDataLength","filterOptions","selectedFilterOption","setSelectedFilterOption","login","src","avatar_url","alt","htmlFor","style","background","color","RepositoryListManager","setData","technologiesToSort","useEffect","getStringifyFilteredData","repositoryCounter","StyledFooter","footer","Paragraph","Footer","Date","getFullYear","MainWrapper","main","Arrow","isScrollArrowVisible","App","repositoryData","setRepositoryData","setRepositoryDataLength","setTechnologiesToSort","scrollArrowShow","setScrollArrowShow","handleScroll","useCallback","window","scrollY","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58a77a71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.7ad2a7eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code1.edcfbd19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code2.27105af1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer.01477358.jpg\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport img from \"../img/code.jpg\";\nimport img1 from \"../img/code1.jpg\";\nimport img2 from \"../img/code2.jpg\";\nimport img3 from \"../img/computer.jpg\";\n\nconst images = [`${img}`, `${img1}`, `${img2}`, `${img3}`];\n\nconst StyledInput = styled.input`\n  height: 2.5rem;\n  width: 20rem;\n  padding: 0.5rem;\n  border: 1px solid #000;\n  border-radius: 2px;\n`;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-wrap: nowrap;\n  max-width: 300px;\n  width: 100%;\n`;\nconst colors = [\"red\", \"blue\", \"green\", \"yellow\"];\nconst StyledButton = styled.button`\n  height: 2.5rem;\n  padding: 0.5rem;\n  border: none;\n  background-color: #000;\n  border: 1px solid #fff;\n  color: #fff;\n  /* color: ${colors[Math.floor(Math.random() * colors.length)]}; */\n  width: 5rem;\n  border-radius: 2px;\n  transition: transform 0.3s ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nfunction SearchBar(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleFetchData = (e, data) => {\n    e.preventDefault();\n    fetch(`https://api.github.com/users/${data}/repos?sort=updated_at&order=desc`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp.message && resp.message.includes(\"Not Found\")) {\n          console.log(resp);\n        } else {\n          console.log(resp);\n          const repos = resp.map(item => item.html_url);\n          console.log(repos);\n          console.log(resp);\n          getWantedData(resp);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const getTechnologiesToSort = data => {\n    const technologies = [];\n    data.map(item => {\n      technologies.push(item[0].language !== null ? item[0].language : \"Other\");\n      return technologies;\n    });\n    return [...new Set(technologies)];\n  };\n\n  const getWantedData = data => {\n    const dataObjects = data.map(item => [\n      {\n        url: item.html_url,\n        img: `${images[Math.floor(Math.random() * images.length)]}`,\n        title: item.name,\n        creation_date: item.created_at.slice(0, 10),\n        modification_date: item.updated_at.slice(0, 10),\n        description: item.description,\n        language: item.language,\n        key: item.id,\n        github_io: item.homepage,\n        owner: item.owner\n      }\n    ]);\n    console.log(dataObjects);\n    console.log(dataObjects.length);\n    props.handleTechnologiesToSortChange(getTechnologiesToSort(dataObjects));\n    props.handleSearchBarDataChange(dataObjects);\n    props.handleRepositoryDataChange(dataObjects.length);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleFetchData(e, inputValue);\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput type=\"text\" placeholder=\"Search\" onChange={e => setInputValue(e.target.value)} />\n      <StyledButton>Search</StyledButton>\n    </StyledForm>\n  );\n}\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SearchBar from \"./SearchBar\";\n\nconst StyledHeader = styled.header`\n  display: flex;\n  background-color: #ccc;\n  padding: 40px 20px;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: -50px;\n  transition: min-height 1s ease-out; \n  min-height: ${props => props.isData ? '400px': '100vh'};\n  clip-path: polygon(0 0, 100% 0, 100% 74%, 0 99%);\n  background: #000;\n  color: #fff;\n  @media (max-width: 768px) {\n    min-height: ${props => props.isData ? '400px': '90vh'};\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst StyledH1 = styled.h1`\n  font-weight: 700;\n  font-size: 2.5rem;\n  max-width: 60%;\n  padding: 0;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    max-width: 100%;\n    text-align: center;\n  }\n`;\n\nfunction MainHeader(props) {\n  const { handleSearchBarDataChange, handleTechnologiesToSortChange, handleRepositoryDataChange } = props;\n  return (\n    <StyledHeader isData={props.isData}>\n      <StyledH1>Github repos - API</StyledH1>\n      <SearchBar handleSearchBarDataChange={handleSearchBarDataChange} handleTechnologiesToSortChange={handleTechnologiesToSortChange} handleRepositoryDataChange={handleRepositoryDataChange}/>\n    </StyledHeader>\n  );\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst ContentLeft = styled.div`\n  transform: translateX(-150%);\n  background: rgba(#000, 0.2);\n  width: 100%;\n  transition: transform 0.3s ease-in;\n  @media (max-width: 500px) {\n    transform: translateX(0);\n  }\n`;\n\nconst Photo = styled.div`\n  background-image: url(${props => props.img});\n  background-size: cover;\n  background-position: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: -1;\n  transition: transform 0.3s ease-in, opacity 0.3s ease-in;\n`;\n\nconst StyledSection = styled.section`\n  display: flex;\n  max-width: 600px;\n  min-height: 400px;\n  width: 90%;\n  margin: 40px 0 0 0;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  overflow: hidden;\n  background: #fff;\n  @media (min-width: 500px) {\n    &:hover ${ContentLeft} {\n      transform: translateX(0);\n    }\n    &:hover ${Photo} {\n      opacity: 0.9;\n      transform: rotate(10deg) scale(1.3);\n    }\n  }\n  @media (max-width: 500px) {\n    flex-direction: column-reverse;\n  }\n\n  ${props =>\n    props.isMirrored &&\n    css`\n      flex-direction: row-reverse;\n      &:hover ${ContentLeft} {\n        transform: translateX(0px);\n      }\n    `}\n`;\n\nconst LeftSection = styled.div`\n  width: 40%;\n  color: #fff;\n  padding: 20px;\n  clip-path: polygon(0 0, 100% 0, 85% 100%, 0% 100%);\n  position: relative;\n  ${props =>\n    props.isMirrored &&\n    css`\n      clip-path: polygon(0 0, 100% 0, 100% 100%, 15% 100%);\n    `}\n  @media (max-width: 500px) {\n    width: 100%;\n    clip-path: polygon(0 0, 100% 10%, 100% 90%, 0% 100%);\n    margin-top: 50px;\n  }\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  padding: 30px;\n  position: relative;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  color: #000;\n  text-transform: uppercase;\n  word-wrap: break-word;\n`;\n\nconst SubTitle = styled.h3`\n  margin-top: 20px;\n  padding: 0;\n  font-size: 1rem;\n  color: #a2a2a2;\n  text-transform: uppercase;\n  word-wrap: break-word;\n`;\n\nconst Description = styled.p`\n  margin-top: 40px;\n  position: relative;\n  &::before {\n    position: absolute;\n    margin-top: -20px;\n    content: \"\";\n    width: 50px;\n    height: 10px;\n    background: #7bd338;\n  }\n`;\n\nconst Created = styled.p``;\n\nconst LinksWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  justify-content: ${props => (props.github_io ? \"space-between\" : \"flex-end\")};\n  bottom: 10px;\n  width: 80%;\n  @media (max-width: 500px) {\n    bottom: -20px;\n  }\n`;\n\nconst GithubLink = styled.a`\n  bottom: 20px;\n  color: #7bd338;\n  text-decoration: underline;\n  transition: transform 0.3s ease-in;\n  cursor: pointer;\n  &:hover {\n    transform: translateX(-10px);\n  }\n  &:hover::after {\n    display: inline-block;\n    opacity: 1;\n    transition: opacity 0.3s ease-in;\n  }\n  &:after {\n    position: absolute;\n    content: \"➢\";\n    font-size: 20px;\n    margin-left: 10px;\n    opacity: 0;\n    transform: opacity;\n  }\n`;\n\nfunction LinksInRepositoryBox({ url, github_io }) {\n  return (\n    <LinksWrapper github_io={github_io}>\n      {github_io ? <GithubLink href={github_io}>Live preview></GithubLink> : null}\n      <GithubLink href={url}>Github></GithubLink>\n    </LinksWrapper>\n  );\n}\n\nfunction RepositoryBox({ title, url, createDate, updateDate, description, language, isMirrored, img, github_io }) {\n  return (\n    <StyledSection isMirrored={isMirrored}>\n      <LeftSection isMirrored={isMirrored}>\n        <Photo img={img} />\n        <ContentLeft>\n          <Created>\n            Created{\" \"}\n            <span role=\"img\" aria-label=\"calendar icon\">\n              📅\n            </span>\n            : {createDate}\n          </Created>\n          <Created>\n            Updated{\" \"}\n            <span role=\"img\" aria-label=\"calendar icon\">\n              📅\n            </span>\n            : {updateDate}\n          </Created>\n        </ContentLeft>\n      </LeftSection>\n      <RightSection isMirrored={isMirrored}>\n        <LinksInRepositoryBox url={url} github_io={github_io} />\n        <Title>{title}</Title>\n        <SubTitle>{language ? `Written mostly in: ${language}` : \"\"}</SubTitle>\n        <Description>{description ? description : \"No desciption for this project\"}</Description>\n      </RightSection>\n    </StyledSection>\n  );\n}\n\nexport default RepositoryBox;\n","import React from \"react\";\nimport RepositoryBox from \"./RepositoryBox\";\n\nexport function RepositoryList({ data }) {\n  return data.map((item, index) => {\n    return index % 2 === 0 ? (\n      <RepositoryBox\n        key={item[0][\"key\"]}\n        img={item[0][\"img\"]}\n        title={item[0][\"title\"]}\n        url={item[0][\"url\"]}\n        createDate={item[0][\"creation_date\"]}\n        updateDate={item[0][\"modification_date\"]}\n        description={item[0][\"description\"]}\n        language={item[0][\"language\"]}\n        github_io={item[0][\"github_io\"]}\n      />\n    ) : (\n      <RepositoryBox\n        key={item[0][\"key\"]}\n        img={item[0][\"img\"]}\n        title={item[0][\"title\"]}\n        url={item[0][\"url\"]}\n        createDate={item[0][\"creation_date\"]}\n        updateDate={item[0][\"modification_date\"]}\n        description={item[0][\"description\"]}\n        language={item[0][\"language\"]}\n        github_io={item[0][\"github_io\"]}\n        isMirrored\n      />\n    );\n  });\n}\n","import React from \"react\";\n\nexport function RepositoryLanguagesCounter({ technologies, data }) {\n  return technologies.map(value => {\n    return (\n      <li>\n        {value}: {countTechnologies(value)}\n      </li>\n    );\n  });\n  function countTechnologies(language) {\n    return data.filter(data => (language !== \"Other\" ? data[0][\"language\"] === language : data[0][\"language\"] === null))\n      .length;\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport img from \"../img/github_icon_small.png\";\nimport { RepositoryLanguagesCounter } from \"./RepositoryLanguagesCounter\";\n\nconst BoxWrapper = styled.section`\n  display: flex;\n  max-width: 600px;\n  min-height: 400px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 90%;\n  margin: 40px 0 0 0;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  overflow: hidden;\n  background: #fff;\n  padding-bottom: 20px;\n`;\n\nconst UserImage = styled.img`\n  max-width: 400px;\n  max-height: 400px;\n  width: 80%;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  margin-bottom: 20px;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n`;\n\nconst UserBoxUl = styled.ul`\n  list-style-type: none;\n  margin-left: -40px;\n  &::before {\n    position: absolute;\n    margin-top: -20px;\n    content: \"\";\n    width: 50px;\n    height: 10px;\n    background: #7bd338;\n  }\n`;\n\nconst StyledH2 = styled.h2`\n  overflow: hidden;\n  margin: 0 auto;\n  font-weight: 700;\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst UserBoxLi = styled.li`\n  list-style-type: none;\n  &::before {\n    content: \"✓\";\n    padding-right: 10px;\n    width: 50px;\n    height: 10px;\n  }\n`;\n\nconst StyledSelect = styled.select`\n  background: \"#7bd338\";\n  color: \"#000\";\n`;\n\nconst Icon = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n\nfunction RepositoryUserBox({ owner, technologies, handleChangeSelectedValue, repositoryDataLength, data }) {\n  const filterOptions = technologies.map((item, index) => {\n    return (\n      <option key={index} value={item}>\n        {item}\n      </option>\n    );\n  });\n\n  const [selectedFilterOption, setSelectedFilterOption] = useState(\"all\");\n\n  return (\n    <BoxWrapper>\n      <StyledH2>Repositories of {owner.login}</StyledH2>\n      <UserImage src={owner.avatar_url} />\n      <UserBoxUl>\n        <UserBoxLi>Number of repositories: {repositoryDataLength}</UserBoxLi>\n        <ol>\n          <RepositoryLanguagesCounter\n            data={data}\n            technologies={technologies}\n            repositoryDataLength={repositoryDataLength}\n          />\n        </ol>\n\n        <UserBoxLi>\n          Github link:{\" \"}\n          <a href=\"https://github.com/jundymek\" aria-label=\"Link to github profile\">\n            <Icon src={img} alt=\"Github icon\" />\n          </a>\n        </UserBoxLi>\n      </UserBoxUl>\n      <StyledLabel htmlFor=\"language\">Sort by language</StyledLabel>\n      <StyledSelect\n        style={{ background: \"#7bd338\", color: \"#000\" }}\n        id=\"language\"\n        onChange={e => {\n          handleChangeSelectedValue(e);\n          setSelectedFilterOption(e.target.value);\n        }}\n        value={selectedFilterOption}\n      >\n        <option value=\"all\">All</option>\n        {filterOptions}\n      </StyledSelect>\n    </BoxWrapper>\n  );\n}\n\nexport default RepositoryUserBox;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { RepositoryList } from \"./RepositoryList\";\nimport RepositoryUserBox  from \"./RepositoryUserBox\";\n\nconst StyledSection = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 50px;\n`;\n\nfunction RepositoryListManager(props) {\n  const [data, setData] = useState(props.data);\n  const technologies = props.technologiesToSort;\n\n  const handleChangeSelectedValue = e => {\n    console.log(e.target.value);\n    setData(getStringifyFilteredData(e.target.value));\n  };\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  const getStringifyFilteredData = value => {\n    if (value === \"all\") {\n      return props.data;\n    } else if (value === \"Other\") {\n      return props.data.filter(item => {\n        return item[0].language === null;\n      });\n    } else {\n      return props.data.filter(item => {\n        return item[0].language === value;\n      });\n    }\n  };\n\n  return (\n    <StyledSection>\n      <RepositoryUserBox\n        repositoryCounter={data.length}\n        owner={data[0][0][\"owner\"]}\n        technologies={technologies}\n        handleChangeSelectedValue={handleChangeSelectedValue}\n        repositoryDataLength={props.repositoryDataLength}\n        data={props.data}\n      />\n      <RepositoryList data={data} />\n    </StyledSection>\n  );\n}\n\nexport default RepositoryListManager;\n","import React from 'react';\nimport styled from 'styled-components';\nimport img from '../img/github_icon_small.png';\n\nconst StyledFooter = styled.footer`\n  display: flex;\n  width: 100%;\n  height: 10vh;\n  align-items: center;\n  justify-content: center;\n  background: black;\n  color: #fff;\n  clip-path: polygon(10% 0, 90% 0, 100% 100%, 0% 100%);\n`\nconst Paragraph = styled.p`\n    justify-self: flex-start;\n    font-size: 14px;\n`\n\nconst Icon = styled.img`\n    width: 40px;\n    height: 40px;\n`\n\nfunction Footer() {\n    return (\n        <StyledFooter>\n        <Paragraph>Made by jundymek in {new Date().getFullYear()}</Paragraph> \n        <a href=\"https://github.com/jundymek\" aria-label=\"Link to github profile\"><Icon src={img} alt=\"Github icon\"/></a>\n        </StyledFooter>\n    )\n}\n\nexport default Footer;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport MainHeader from \"./components/MainHeader\";\nimport RepositoryListManager from \"./components/RepositoryListManager\";\nimport Footer from \"./components/Footer\";\nimport styled from \"styled-components\";\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  max-width: 1021px;\n  width: 100%;\n  min-height: 90vh;\n  margin: 0% auto;\n  background: #f2f2f2;\n  z-index: -1;\n`;\n\nconst Arrow = styled.a`\n  display: ${props => (props.isScrollArrowVisible ? \"block\" : \"none\")};\n  position: fixed;\n  bottom: 30px;\n  right: 20px;\n  width: 20px;\n  height: 20px;\n  position: fixed;\n  &::after {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n    position: absolute;\n    font-size: 40px;\n    content: \"🔝\";\n  }\n  @media (max-width: 400px) {\n    display: none;\n  }\n`;\n\nconst Paragraph = styled.p`\n  width: 35%;\n  align-self: flex-end;\n  text-align: justify;\n  padding-right: 30px;\n  margin-top: -100px;\n  @media (max-width: 400px) {\n    font-size: 14px;\n    margin-top: -80px;\n  }\n`;\n\nfunction App() {\n  const [repositoryData, setRepositoryData] = useState(null);\n  const [repositoryDataLength, setRepositoryDataLength] = useState(null);\n  const [technologiesToSort, setTechnologiesToSort] = useState(null);\n  const [scrollArrowShow, setScrollArrowShow] = useState(false);\n\n  const handleScroll = useCallback(\n    () => {\n      if (window.scrollY > 0 && !scrollArrowShow && repositoryData) {\n        setScrollArrowShow(true);\n      }\n      if (window.scrollY <= 0) {\n        setScrollArrowShow(false);\n      }\n    },\n    [repositoryData, scrollArrowShow],\n  )\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  \n\n  return (\n    <MainWrapper>\n      <MainHeader\n        isData={repositoryData ? true : null}\n        handleSearchBarDataChange={value => setRepositoryData(value)}\n        handleTechnologiesToSortChange={value => setTechnologiesToSort(value)}\n        handleRepositoryDataChange={value => setRepositoryDataLength(value)}\n      />\n      {repositoryData ? (\n        <RepositoryListManager data={repositoryData} technologiesToSort={technologiesToSort} repositoryDataLength={repositoryDataLength} />\n      ) : (\n        <Paragraph>\n          Please fill above form to get data from GitHub API. List all repositories of specified user.\n        </Paragraph>\n      )}\n      <Arrow isScrollArrowVisible={scrollArrowShow} href=\"#\" />\n      <Footer />\n    </MainWrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/github_icon_small.cec17e16.png\";"],"sourceRoot":""}