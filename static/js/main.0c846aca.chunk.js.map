{"version":3,"sources":["img/code.jpg","img/code1.jpg","img/code2.jpg","img/computer.jpg","img/github_icon_small.png","components/SearchBar.js","components/MainHeader.js","components/RepositoryBox.js","components/RepositoryList.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledInput","styled","input","StyledForm","form","colors","StyledButton","button","Math","floor","random","length","SearchBar","props","handleInputChange","e","setState","inputValue","target","value","handleFetchData","data","preventDefault","fetch","then","resp","json","message","includes","console","log","repos","map","item","html_url","getWantedData","catch","error","dataObjects","url","title","name","cration_date","created_at","slice","modification_date","updated_at","description","language","handleSearchBarDataChange","handleSubmit","state","onSubmit","this","type","placeholder","onChange","React","Component","StyledHeader","header","isData","StyledH1","h1","MainHeader","ContentLeft","div","Photo","img","StyledSection","section","isMirrored","css","LeftSection","RightSection","Title","h2","SubTitle","h3","Description","p","Created","GithubLink","a","RepositoryBox","createDate","updateDate","role","aria-label","href","StyledH2","Paragraph","images","img1","img2","img3","RepositoryList","index","key","uuid","v4","PureComponent","StyledFooter","footer","Icon","Footer","Date","getFullYear","src","alt","MainWrapper","main","Arrow","isScrollArrowVisible","App","componentDidMount","window","addEventListener","handleScroll","repositoryData","scrollY","scrollArrowShow","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c846aca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.5399464e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code1.30561e1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code2.a7f77978.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer.121d63bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github_icon_small.cec17e16.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  height: 2.5rem;\n  width: 20rem;\n  padding: 0.5rem;\n  border: 1px solid #000;\n  border-radius: 2px;\n`;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-wrap: nowrap;\n  max-width: 300px;\n  width: 100%;\n`;\nconst colors = [\"red\", \"blue\", \"green\", \"yellow\"];\nconst StyledButton = styled.button`\n  height: 2.5rem;\n  padding: 0.5rem;\n  border: none;\n  background-color: #000;\n  border: 1px solid #fff;\n  color: #fff;\n  /* color: ${colors[Math.floor(Math.random() * colors.length)]}; */\n  width: 5rem;\n  border-radius: 2px;\n  transition: transform 0.3s ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\"\n    };\n  }\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleFetchData = (e, data) => {\n    e.preventDefault();\n    fetch(`https://api.github.com/users/${data}/repos?sort=updated_at&order=desc`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp.message && resp.message.includes(\"Not Found\")) {\n          console.log(resp);\n        } else {\n          console.log(resp);\n          const repos = resp.map(item => item.html_url);\n          console.log(repos);\n          this.getWantedData(resp);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    console.log(data);\n  };\n\n  getWantedData = data => {\n    const dataObjects = data.map(item => [\n      {\n        url: item.html_url,\n        title: item.name,\n        cration_date: item.created_at.slice(0, 10),\n        modification_date: item.updated_at.slice(0, 10),\n        description: item.description,\n        language: item.language\n      }\n    ]);\n    console.log(dataObjects);\n    this.props.handleSearchBarDataChange(dataObjects);\n  };\n\n  handleSubmit = e => {\n    this.props.handleSearchBarDataChange(\"\");\n    e.preventDefault();\n    const data = this.state.inputValue;\n    console.log(data);\n    this.handleFetchData(e, data);\n  };\n\n  render() {\n    return (\n      <StyledForm onSubmit={this.handleSubmit}>\n        <StyledInput type=\"text\" placeholder=\"Search\" onChange={this.handleInputChange} />\n        <StyledButton>Search</StyledButton>\n      </StyledForm>\n    );\n  }\n}\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SearchBar from \"./SearchBar\";\n\nconst StyledHeader = styled.header`\n  display: flex;\n  background-color: #ccc;\n  padding: 40px 20px;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: -50px;\n  transition: min-height 1s ease-out; \n  min-height: ${props => props.isData ? '400px': '100vh'};\n  clip-path: polygon(0 0, 100% 0, 100% 74%, 0 99%);\n  background: #000;\n  color: #fff;\n  @media (max-width: 768px) {\n    min-height: ${props => props.isData ? '400px': '90vh'};\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst StyledH1 = styled.h1`\n  font-weight: 700;\n  font-size: 2.5rem;\n  max-width: 60%;\n  padding: 0;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    max-width: 100%;\n    text-align: center;\n  }\n`;\n\nfunction MainHeader(props) {\n  const { handleSearchBarDataChange } = props;\n  console.log(props.isData)\n  return (\n    <StyledHeader isData={props.isData}>\n      <StyledH1>Github repos - API</StyledH1>\n      <SearchBar handleSearchBarDataChange={handleSearchBarDataChange} />\n    </StyledHeader>\n  );\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst ContentLeft = styled.div`\n  transform: translateX(-150%);\n  background: rgba(#000, 0.2);\n  width: 100%;\n  transition: transform 0.3s ease-in;\n  @media (max-width: 500px) {\n    transform: translateX(0);\n  }\n`;\n\nconst Photo = styled.div`\n  background-image: url(${props => props.img});\n  background-size: cover;\n  background-position: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: -1;\n  transition: transform 0.3s ease-in, opacity 0.3s ease-in;\n`;\n\nconst StyledSection = styled.section`\n  display: flex;\n  max-width: 600px;\n  min-height: 400px;\n  width: 90%;\n  margin: 40px 0 0 0;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  overflow: hidden;\n  background: #fff;\n  @media (min-width: 500px) {\n    &:hover ${ContentLeft} {\n      transform: translateX(0);\n    }\n    &:hover ${Photo} {\n      opacity: 0.9;\n      transform: rotate(10deg) scale(1.3);\n    }\n  }\n  @media (max-width: 500px) {\n    flex-direction: column-reverse;\n  }\n\n  ${props =>\n    props.isMirrored &&\n    css`\n      flex-direction: row-reverse;\n      &:hover ${ContentLeft} {\n        transform: translateX(0px);\n      }\n    `}\n`;\n\nconst LeftSection = styled.div`\n  width: 40%;\n  color: #fff;\n  padding: 20px;\n  clip-path: polygon(0 0, 100% 0, 85% 100%, 0% 100%);\n  position: relative;\n  ${props =>\n    props.isMirrored &&\n    css`\n      clip-path: polygon(0 0, 100% 0, 100% 100%, 15% 100%);\n    `}\n  @media (max-width: 500px) {\n    width: 100%;\n    clip-path: polygon(0 0, 100% 10%, 100% 90%, 0% 100%);\n  }\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  padding: 30px;\n  position: relative;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  color: #000;\n  text-transform: uppercase;\n  word-wrap: break-word;\n`;\n\nconst SubTitle = styled.h3`\n  margin-top: 20px;\n  padding: 0;\n  font-size: 1rem;\n  color: #a2a2a2;\n  text-transform: uppercase;\n  word-wrap: break-word;\n`;\n\nconst Description = styled.p`\n  margin-top: 40px;\n  position: relative;\n  &::before {\n    position: absolute;\n    margin-top: -20px;\n    content: \"\";\n    width: 50px;\n    height: 10px;\n    background: #7bd338;\n  }\n`;\n\nconst Created = styled.p``;\n\nconst GithubLink = styled.a`\n  position: absolute;\n  bottom: 20px;\n  color: #7bd338;\n  align-self: flex-end;\n  justify-self: flex-end;\n  text-decoration: underline;\n  transition: transform 0.3s ease-in;\n  &:hover {\n    transform: translateX(-10px);\n  }\n  &:hover::after {\n    display: inline-block;\n    opacity: 1;\n    transition: opacity 0.3s ease-in;\n  }\n  &:after {\n    position: absolute;\n    content: \"➢\";\n    font-size: 20px;\n    margin-left: 10px;\n    opacity: 0;\n    transform: opacity;\n  }\n`;\n\nclass RepositoryBox extends React.Component {\n  render() {\n    const { title, url, createDate, updateDate, description, language, isMirrored, img } = this.props;\n    console.log(img);\n    return (\n      <StyledSection isMirrored={isMirrored}>\n        <LeftSection isMirrored={isMirrored}>\n          <Photo img={img} />\n          <ContentLeft>\n            <Created>\n              Created{\" \"}\n              <span role=\"img\" aria-label=\"calendar icon\">\n                📅\n              </span>\n              : {createDate}\n            </Created>\n            <Created>\n              Updated{\" \"}\n              <span role=\"img\" aria-label=\"calendar icon\">\n                📅\n              </span>\n              : {updateDate}\n            </Created>\n          </ContentLeft>\n        </LeftSection>\n        <RightSection isMirrored={isMirrored}>\n          <Title>{title}</Title>\n          <SubTitle>{language ? `Written mostly in: ${language}` : \"\"}</SubTitle>\n          <Description>{description ? description : \"No desciption for this project\"}</Description>\n          <GithubLink href={url}>Read more></GithubLink>\n        </RightSection>\n      </StyledSection>\n    );\n  }\n}\n\nexport default RepositoryBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RepositoryBox from \"./RepositoryBox\";\nimport uuid from \"uuid\";\nimport img from \"../img/code.jpg\";\nimport img1 from \"../img/code1.jpg\";\nimport img2 from \"../img/code2.jpg\";\nimport img3 from \"../img/computer.jpg\";\n\nconst StyledSection = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 50px;\n`;\n\nconst StyledH2 = styled.h2`\n  font-weight: 700;\n  text-align: center;\n`;\n\nconst Paragraph = styled.p`\n  width: 35%;\n  align-self: flex-end;\n  text-align: justify;\n  padding-right: 30px;\n  margin-top: -100px;\n  @media (max-width: 400px) {\n    font-size: 14px;\n    margin-top: -80px;\n  }\n`;\n\nconst images = [`${img}`, `${img1}`, `${img2}`, `${img3}`];\n\nclass RepositoryList extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <StyledSection>\n        {data ? (\n          <StyledH2>Repositories</StyledH2>\n        ) : (\n          <Paragraph>\n            Please fill above form to get data from GitHub API. List all repositories of specified user.\n          </Paragraph>\n        )}\n        {data\n          ? data.map((item, index) => {\n              return index % 2 === 0 ? (\n                <RepositoryBox\n                  key={uuid.v4()}\n                  img={images[Math.floor(Math.random() * images.length)]}\n                  title={item[0][\"title\"]}\n                  url={item[0][\"url\"]}\n                  createDate={item[0][\"cration_date\"]}\n                  updateDate={item[0][\"modification_date\"]}\n                  description={item[0][\"description\"]}\n                  language={item[0][\"language\"]}\n                />\n              ) : (\n                <RepositoryBox\n                  key={uuid.v4()}\n                  img={images[Math.floor(Math.random() * images.length)]}\n                  title={item[0][\"title\"]}\n                  url={item[0][\"url\"]}\n                  createDate={item[0][\"cration_date\"]}\n                  updateDate={item[0][\"modification_date\"]}\n                  description={item[0][\"description\"]}\n                  language={item[0][\"language\"]}\n                  isMirrored\n                />\n              );\n            })\n          : \"\"}\n      </StyledSection>\n    );\n  }\n}\n\nexport default RepositoryList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport img from '../img/github_icon_small.png';\n\nconst StyledFooter = styled.footer`\n  display: flex;\n  width: 100%;\n  height: 10vh;\n  align-items: center;\n  justify-content: center;\n  background: black;\n  color: #fff;\n  clip-path: polygon(10% 0, 90% 0, 100% 100%, 0% 100%);\n`\nconst Paragraph = styled.p`\n    justify-self: flex-start;\n    font-size: 14px;\n`\n\nconst Icon = styled.img`\n    width: 40px;\n    height: 40px;\n`\n\nfunction Footer() {\n    return (\n        <StyledFooter>\n        <Paragraph>Made by jundymek in {new Date().getFullYear()}</Paragraph> \n        <a href=\"https://github.com/jundymek\" aria-label=\"Link to github profile\"><Icon src={img} alt=\"Github icon\"/></a>\n        </StyledFooter>\n    )\n}\n\nexport default Footer;\n","import React from \"react\";\nimport MainHeader from \"./components/MainHeader\";\nimport RepositoryList from \"./components/RepositoryList\";\nimport Footer from \"./components/Footer\";\nimport styled from \"styled-components\";\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  max-width: 1021px;\n  width: 100%;\n  min-height: 90vh;\n  margin: 0% auto;\n  background: #f2f2f2;\n  z-index: -1;\n`;\n\nconst Arrow = styled.a`\n  display: ${props => (props.isScrollArrowVisible ? \"block\" : \"none\")};\n  position: fixed;\n  bottom: 30px;\n  right: 20px;\n  width: 20px;\n  height: 20px;\n  position: fixed;\n  &::after {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n    position: absolute;\n    font-size: 40px;\n    content: \"🔝\";\n  }\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repositoryData: null,\n      scrollArrowShow: false\n    };\n  }\n\n  componentDidMount = () => {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  };\n\n  handleSearchBarDataChange = value => {\n    this.setState({ repositoryData: value });\n  };\n\n  handleScroll = () => {\n    if (window.scrollY > 0 && !this.state.scrollArrowShow && this.state.repositoryData) {\n      this.setState({ scrollArrowShow: true });\n    }\n    if (window.scrollY === 0) {\n      this.setState({ scrollArrowShow: false });\n    }\n  };\n\n  render() {\n    return (\n      <MainWrapper>\n        <MainHeader\n          isData={this.state.repositoryData ? true : null}\n          handleSearchBarDataChange={this.handleSearchBarDataChange}\n        />\n        <RepositoryList data={this.state.repositoryData} />\n        <Arrow isScrollArrowVisible={this.state.scrollArrowShow} href=\"#\" />\n        <Footer />\n      </MainWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}